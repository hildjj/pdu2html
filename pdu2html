#!/usr/bin/env python

import re
import sys

bit_re = re.compile("^\s*([0-9]+|\*)\s+(.*)$")

def row(cells, tot):
    # cells will have a list of (size, name) tuples that add to 32 or more bits,
    # unless it is the last line
    elip = ""
    rowbits = sum([int(s) for s,n in cells if s != '*'])
    if rowbits == 0:
        rowbits = 32
        elip = "<br />..."

    if tot == '*':
        print """    <tr>
        <th>*<br />...</th>
        <th>*<br />...</th>"""
    else:
        print """    <tr>
        <th>%d%s</th>
        <th>%d%s</th>""" % (tot/8, elip, tot, elip)

    for sz, name in cells:
        if sz == '*':
            if not name:
                name = "&nbsp;"
            print "        <td colspan='32'>%s<br />...</td>" % (name,)
            tot = '*'
            rowbits -= 32
        else:
            isz = int(sz)
            if isz == 1:
                name = '<br />'.join(list(name))
                print "        <td>%s</td>" % (name,)
                rowbits -= 1
            elif isz > 32:
                if not name:
                    name = "&nbsp;"
                print "        <td rowspan='%d' colspan='32'>%s</td>" % (isz/32, name)
                rowbits -= 32
            else:
                if not name:
                    name = "&nbsp;"
                print "        <td colspan='%s'>%s</td>" % (sz, name)
                rowbits -= isz
            tot += isz
    print "    </tr>"
    while rowbits > 0:
        print """    <tr>
        <th>%d%s</th>
        <th>%d%s</th>
    </tr>""" % (tot/8, elip, tot, elip)
        rowbits -= 32
        tot += 32
    return tot

for fn in sys.argv[1:]:
    f = open(fn)
    print """
<!DOCTYPE html>
<html>
<head>
<title>%s</title>
<link rel="stylesheet" type="text/css" href="styles.css">
</head>
<body>
<table class='pdu'>
  <thead>
    <tr>
      <th>Offsets</th>
      <th>Octet</th>
      <th colspan="8">0</th>
      <th colspan="8">1</th>
      <th colspan="8">2</th>
      <th colspan="8">3</th>
    </tr>
    <tr>
      <th>Octet</th>
      <th>Bit</th>
      <th>&#xA0;0</th><th>&#xA0;1</th><th>&#xA0;2</th><th>&#xA0;3</th>
      <th>&#xA0;4</th><th>&#xA0;5</th><th>&#xA0;6</th><th>&#xA0;7</th>
      <th>&#xA0;8</th><th>&#xA0;9</th><th>10</th><th>11</th>
      <th>12</th><th>13</th><th>14</th><th>15</th>
      <th>16</th><th>17</th><th>18</th><th>19</th>
      <th>20</th><th>21</th><th>22</th><th>23</th>
      <th>24</th><th>25</th><th>26</th><th>27</th>
      <th>28</th><th>29</th><th>30</th><th>31</th>
    </tr>
  </thead>
  <tbody>
""" % (fn,)

    tot = 0
    rowbits = 0
    nextrow = []
    for ln in f.readlines():
        m = bit_re.search(ln)
        if not m: continue

        (sz, name) = m.groups()
        nextrow.append((sz, name))
        if sz == '*':
            tot = row(nextrow, tot)
            nextrow = []
            rowbits = 0
        else:
             rowbits += int(sz)
             if rowbits >= 32:
                tot = row(nextrow, tot)
                nextrow = []
                rowbits = 0

    if nextrow:
        tot = row(nextrow, tot)

    print """
  </tbody>
</table>
</body>
</html>"""
    f.close()
